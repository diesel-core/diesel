var o={reset:"\x1B[0m",info:"\x1B[34m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[36m",PUT:"\x1B[35m",DELETE:"\x1B[31m"}},m=(n,e,t)=>{let s=o[n]||o.reset,r=t?.method?o.method[t.method]||o.reset:o.reset,d=t?.status?t.status>=500?o.error:t.status>=400?o.warn:o.info:o.reset;console.log(`
${s}[${n.toUpperCase()}]${o.reset} ${e} - ${r}${t?.method||""}${o.reset}`);let g={timestamp:new Date().toISOString(),...t,status:t?.status?`${d}${t.status}${o.reset}`:void 0,method:t?.method?`${r}${t.method}${o.reset}`:void 0};console.log(JSON.stringify(g,null,2)+`
`)},h=(n)=>{n.addHooks("onRequest",async(e,t)=>{e.startTime=Date.now(),m("info","Incoming Request",{method:e.method,url:t.toString(),headers:{"user-agent":e.headers.get("user-agent"),"content-type":e.headers.get("Content-Type")}})}),n.addHooks("onSend",(e)=>{let t=`${Date.now()-e.req.startTime}ms`;m("info","Response Sent",{method:e.req.method,url:e.url,status:e.status,duration:t,headers:{"content-type":e.headers.get("Content-Type")}})})},a=(n,e,t,s=0,r)=>{let d=o.method[e]||o.reset,g=s>=500?o.error:s>=400?o.warn:o.info,i=n==="<--"?`${n} ${d}${e}${o.reset} ${t}`:`${n} ${d}${e}${o.reset} ${t} ${g}${s}${o.reset} ${r||""}`;console.log(i)},u=(n)=>{let e=Date.now()-n;return e<1000?`${e}ms`:`${Math.round(e/1000)}s`},$=(n)=>{n.addHooks("onRequest",(e,t)=>{e.startTime=Date.now(),a("<--",e.method,new URL(t).pathname)}),n.addHooks("onSend",async(e)=>{let{method:t,url:s}=e.req,r=new URL(s).pathname;a("-->",t,r,e.status,u(e.req.startTime))}),n.addHooks("routeNotFound",(e)=>{a("[routeNotFound]",e.req.method,e.url.pathname,404)}),n.addHooks("onError",(e,t,s)=>{a(e?.message,t.method,s.toString(),500)})};export{$ as logger,h as advancedLogger};
