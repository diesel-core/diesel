var r={reset:"\x1B[0m",info:"\x1B[34m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[36m",PUT:"\x1B[35m",DELETE:"\x1B[31m"}},i=(o,t,e)=>{let n=r[o]||r.reset,s=e?.method?r.method[e.method]||r.reset:r.reset;console.log(`
${n}[${o.toUpperCase()}]${r.reset} ${t} - ${s}${e?.method||""}${r.reset}`),console.log(JSON.stringify({timestamp:new Date().toISOString(),...e},null,2)+`
`)},c=(o)=>{o.addHooks("onRequest",async(t,e)=>{t.startTime=Date.now(),i("info","Incoming Request",{method:t.method,url:e.toString(),headers:{"user-agent":t.headers.get("user-agent"),"content-type":t.headers.get("content-type")}})}),o.addHooks("postHandler",(t)=>{let e=`${Date.now()-t.req.startTime}ms`;i("info","Response Sent",{method:t.req.method,url:t.url,status:t?.status??"",duration:e})})},m=(o,t,e,n,s=0,g)=>{let a=t==="<--"?`${t} ${e} ${n}`:`${t} ${e} ${n} ${s} ${g||""}`;o(a)},d=(o)=>{let t=Date.now()-o;return t<1000?`${t}ms`:`${Math.round(t/1000)}s`},u=(o=console.log)=>{return async function t(e){let{method:n,url:s}=e.req,g=new URL(s).pathname;m(o,"<--",n,g);let a=Date.now();m(o,"-->",n,g,0,d(a))}};export{u as logger,c as advancedLogger};
