var t={reset:"\x1B[0m",info:"\x1B[36m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[34m",PUT:"\x1B[35m",DELETE:"\x1B[31m",PATCH:"\x1B[36m"}},c=(d,s,o)=>{let a=t[d]||t.reset,g=o?.method?t.method[o.method]||t.reset:t.reset,u=o?.status?o.status>=500?t.error:o.status>=400?t.warn:t.info:t.reset;console.log(`
${a}[${d.toUpperCase()}]${t.reset} ${s} - ${g}${o?.method||""}${t.reset}`);let p={timestamp:new Date().toISOString(),...o,status:o?.status?`${u}${o.status}${t.reset}`:void 0,method:o?.method?`${g>a}${o.method}${t.reset}`:void 0};console.log(JSON.stringify(p,null,2)+`
`)},h=(d)=>{let{app:s,logger:o,logLevel:a="info",onRequest:g,onSend:u,onError:p,routeNotFound:n}=d||{};s?.addHooks("onRequest",(e,r)=>{e.startTime=Date.now(),o?.()??c(a,"Incoming Request",{method:e.method,url:r.toString(),headers:{"user-agent":e.headers.get("user-agent"),"content-type":e.headers.get("content-type")}}),g?.(e,r)}),s?.addHooks("onSend",async(e)=>{let r=`${Date.now()-e.req.startTime}ms`;o?.()??c(a,"Response Sent",{method:e.req.method,url:e.url.toString(),status:e.status,duration:r,reqId:e.get?.("requestId"),headers:{"content-type":e.headers.get("content-type")}});let i=await u?.(e);if(i instanceof Response)return i}),s?.addHooks("routeNotFound",async(e)=>{o?.()&&o();let r=await n?.(e);if(r instanceof Response)return r}),s?.addHooks("onError",async(e,r,i)=>{o?.()??c("error","Unhandled Error",{method:r.method,url:i.toString(),status:500,error:e.message});let m=await p?.(e,r,i);if(m instanceof Response)return m})},R=(d,s,o,a=0,g,u)=>{let p=t.method[s]||t.reset,n=a>=500?t.error:a>=400?t.warn:t.info,e=u?`[${u}] `:"",r=d==="<--"?`${d} ${p}${s}${t.reset} ${o} ${e}`:`${d} ${p}${s}${t.reset} ${o} ${n}${a}${t.reset} ${g??""} ${e}`;console.log(r)},$=(d)=>{let s=Date.now()-d;return s<1000?`${s}ms`:`${Math.round(s/1000)}s`},L=(d)=>{let{app:s,log:o,onRequest:a,onSend:g,onError:u,routeNotFound:p}=d;s.addHooks("onRequest",(n,e)=>{n.startTime=Date.now(),o?.()??R("<--",n.method,e.pathname),a?.(n,e)}),s.addHooks("onSend",async(n)=>{let{method:e,url:r}=n.req,i=new URL(r).pathname,m=n.get?.("requestId");o?.()??R("-->",e,i,n.status,$(n.req.startTime),m);let l=await g?.(n);if(l instanceof Response)return l}),s.addHooks("routeNotFound",async(n)=>{o?.()&&o();let e=await p?.(n);if(e instanceof Response)return e}),s.addHooks("onError",async(n,e,r)=>{o?.()??R(n.message,e.method,r.toString(),500);let i=await u?.(n,e,r);if(i instanceof Response)return i})};export{L as logger,h as advancedLogger};
