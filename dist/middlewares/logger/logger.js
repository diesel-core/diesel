var r={reset:"\x1B[0m",info:"\x1B[34m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[36m",PUT:"\x1B[35m",DELETE:"\x1B[31m"}},d=(o,e,t)=>{let n=r[o]||r.reset,s=t?.method?r.method[t.method]||r.reset:r.reset;console.log(`
${n}[${o.toUpperCase()}]${r.reset} ${e} - ${s}${t?.method||""}${r.reset}`),console.log(JSON.stringify({timestamp:new Date().toISOString(),...t},null,2)+`
`)},i=(o)=>{o.addHooks("onRequest",async(e,t)=>{e.startTime=Date.now(),d("info","Incoming Request",{method:e.method,url:t.toString(),headers:{"user-agent":e.headers.get("user-agent"),"content-type":e.headers.get("Content-Type")}})}),o.addHooks("postHandler",(e)=>{let t=`${Date.now()-e.req.startTime}ms`;d("info","Response Sent",{method:e.req.method,url:e.url,status:e.status,duration:t,headers:{"content-type":e.headers.get("Content-Type")}})})},a=(o,e,t,n=0,s)=>{let m=o==="<--"?`${o} ${e} ${t}`:`${o} ${e} ${t} ${n} ${s||""}`;console.log(m)},g=(o)=>{let e=Date.now()-o;return e<1000?`${e}ms`:`${Math.round(e/1000)}s`},u=(o)=>{o.addHooks("onRequest",(e,t)=>{e.startTime=Date.now(),a("<--",e.method,new URL(t).pathname)}),o.addHooks("postHandler",async(e)=>{let{method:t,url:n}=e.req,s=new URL(n).pathname;a("-->",t,s,e.status,g(e.req.startTime))}),o.addHooks("routeNotFound",(e)=>{a("routeNotFound",e.req.method,e.url.pathname,404)}),o.addHooks("onError",(e,t,n)=>{d("error","Error occurred",{method:t.method,url:n.toString()})})};export{u as logger,i as advancedLogger};
