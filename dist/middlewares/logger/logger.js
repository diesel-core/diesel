var k={reset:"\x1B[0m",info:"\x1B[36m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[34m",PUT:"\x1B[35m",DELETE:"\x1B[31m",PATCH:"\x1B[36m"}},N=(A,w,j)=>{let D=k[A]||k.reset,H=j?.method?k.method[j.method]||k.reset:k.reset,I=j?.status?j.status>=500?k.error:j.status>=400?k.warn:k.info:k.reset;console.log(`
${D}[${A.toUpperCase()}]${k.reset} ${w} - ${H}${j?.method||""}${k.reset}`);let J={timestamp:new Date().toISOString(),...j,status:j?.status?`${I}${j.status}${k.reset}`:void 0,method:j?.method?`${H}${j.method}${k.reset}`:void 0};console.log(JSON.stringify(J,null,2)+`
`)},U=(A)=>{let{app:w,logger:j,logLevel:D="info",onRequest:H,onSend:I,onError:J,routeNotFound:z}=A||{};w?.addHooks("onRequest",(b,B)=>{b.startTime=Date.now(),j?.()??N(D,"Incoming Request",{method:b.method,url:B.toString(),headers:{"user-agent":b.headers.get("user-agent"),"content-type":b.headers.get("content-type")}}),H?.(b,B)}),w?.addHooks("onSend",async(b)=>{let B=`${Date.now()-b.req.startTime}ms`;j?.()??N(D,"Response Sent",{method:b.req.method,url:b.url.toString(),status:b.status,duration:B,headers:{"content-type":b.headers.get("content-type")}});let G=await I?.(b);if(G instanceof Response)return G}),w?.addHooks("onError",async(b,B,G)=>{j?.()??N("error","Unhandled Error",{method:B.method,url:G.toString(),status:500,error:b.message});let K=await J?.(b,B,G);if(K instanceof Response)return K})},Q=(A,w,j,D=0,H)=>{let I=k.method[w]||k.reset,J=D>=500?k.error:D>=400?k.warn:k.info,z=A==="<--"?`${A} ${I}${w}${k.reset} ${j}`:`${A} ${I}${w}${k.reset} ${j} ${J}${D}${k.reset} ${H||""}`;console.log(z)},T=(A)=>{let w=Date.now()-A;return w<1000?`${w}ms`:`${Math.round(w/1000)}s`},V=(A)=>{let{app:w,log:j,onRequest:D,onSend:H,onError:I,routeNotFound:J}=A;w.addHooks("onRequest",(z,b)=>{z.startTime=Date.now(),j?.()??Q("<--",z.method,b.pathname),D?.(z,b)}),w.addHooks("onSend",async(z)=>{let{method:b,url:B}=z.req,G=new URL(B).pathname;j?.()??Q("-->",b,G,z.status,T(z.req.startTime));let K=await H?.(z);if(K instanceof Response)return K}),w.addHooks("onError",async(z,b,B)=>{j?.()??Q(z.message,b.method,B.toString(),500);let G=await I?.(z,b,B);if(G instanceof Response)return G})};export{V as logger,U as advancedLogger};
