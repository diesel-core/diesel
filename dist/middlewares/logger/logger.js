var A={reset:"\x1B[0m",info:"\x1B[34m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[36m",PUT:"\x1B[35m",DELETE:"\x1B[31m"}},G=(k,b,j)=>{let z=A[k]||A.reset,B=j?.method?A.method[j.method]||A.reset:A.reset;console.log(`
${z}[${k.toUpperCase()}]${A.reset} ${b} - ${B}${j?.method||""}${A.reset}`),console.log(JSON.stringify({timestamp:new Date().toISOString(),...j},null,2)+`
`)},K=(k)=>{k.addHooks("onRequest",async(b,j)=>{b.startTime=Date.now(),G("info","Incoming Request",{method:b.method,url:j.toString(),headers:{"user-agent":b.headers.get("user-agent"),"content-type":b.headers.get("content-type")}})}),k.addHooks("postHandler",(b)=>{let j=`${Date.now()-b.req.startTime}ms`;G("info","Response Sent",{method:b.req.method,url:b.url,status:b.status,duration:j})})},H=(k,b,j,z=0,B)=>{let I=k==="<--"?`${k} ${b} ${j}`:`${k} ${b} ${j} ${z} ${B||""}`;console.log(I)},J=(k)=>{let b=Date.now()-k;return b<1000?`${b}ms`:`${Math.round(b/1000)}s`},M=(k)=>{k.addHooks("onRequest",(b,j)=>{b.startTime=Date.now(),H("<--",b.method,new URL(j).pathname)}),k.addHooks("postHandler",async(b)=>{let{method:j,url:z}=b.req,B=new URL(z).pathname;H("-->",j,B,b.status,J(b.req.startTime))}),k.addHooks("onError",(b,j,z)=>{G("error","Error occurred",{method:j.method,url:z.toString(),error:b.message})})};export{M as logger,K as advancedLogger};
